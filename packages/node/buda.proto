syntax = "proto3";
package buda;

message Uuid {
	string id = 1;
}

message Timestamp {
	int64 seconds = 1;
	int32 nanos = 2;
}

message ActionTaken {
	message MetadataEntry {
		string key = 1;
		string value = 2;
	}
	Uuid id = 1;
	string application = 2;
	string location = 3;
	string action = 4;
	repeated MetadataEntry metadata = 5;
	Timestamp created_at = 6;
}

message Funnel {
	message TagsEntry {
		string key = 1;
		string value = 2;
	}
	Uuid id = 1;
	Uuid user_id = 2;
	Timestamp created_at = 3;
	string name = 4;
	repeated TagsEntry tags = 5;
}

message Link {
	string target = 1;
	Uuid target_id = 2;
}

message FunnelEvent {
	message TagsEntry {
		string key = 1;
		string value = 2;
	}
	Uuid id = 1;
	Uuid funnel_id = 2;
	Uuid funnel_step_id = 3;
	Uuid user_id = 4;
	Timestamp created_at = 5;
	repeated TagsEntry tags = 6;
	bool funnel_end = 16;
	repeated Link links = 17;
}

enum PaymentSchedule{
	MONTHLY = 0;
	QUARTERLY = 1;
	BIANNUALLY = 2;
	ANNUALLY = 3;
}

enum PaymentTerms{
	DUE_UPON_RECEIPT = 0;
	NET_30 = 1;
	NET_60 = 2;
}

enum PaymentType{
	STRIPE = 0;
	APPLE = 1;
	ANDROID = 2;
	CHECK = 3;
	BANK = 4;
	PAYPAL = 5;
}

enum Product{
	PUBLISH = 0;
	REPLY = 1;
	ANALYZE = 2;
}

message Signin {
	message UserAgent {
		string browser = 1;
		string version = 2;
		string os = 3;
		string device = 4;
	}
	enum SigninOption{
		EMAIL = 0;
		FACEBOOK = 1;
		TWITTER = 2;
		LINKEDIN = 3;
		GOOGLE = 4;
	}
	enum SigninClient{
		WEB = 0;
		PUBLISH = 1;
		ANALYZE = 3;
		IPHONE = 4;
		ANDROID = 5;
		OTHER = 6;
	}
	Uuid id = 1;
	Uuid user_id = 2;
	Uuid visitor_id = 3;
	Uuid legacy_visitor_id = 100;
	Timestamp created_at = 4;
	SigninClient client = 5;
	SigninOption option = 6;
	Product product = 7;
	UserAgent user_agent = 8;
	Uuid client_id = 9;
	string referrer = 10;
	string ip = 11;
}

message Signup {
	message UserAgent {
		string browser = 1;
		string version = 2;
		string os = 3;
		string device = 4;
	}
	enum SignupOption{
		EMAIL = 0;
		FACEBOOK = 1;
		TWITTER = 2;
		LINKEDIN = 3;
		GOOGLE = 4;
		TEAM_INVITE = 5;
	}
	enum SignupClient{
		WEB = 0;
		IPHONE = 4;
		ANDROID = 5;
		OTHER = 6;
	}
	Uuid id = 1;
	Uuid user_id = 2;
	Uuid visitor_id = 3;
	Uuid legacy_visitor_id = 100;
	Timestamp created_at = 4;
	SignupClient client = 5;
	SignupOption option = 6;
	bool was_created_with_trial = 7;
	Product product = 8;
	string cta = 9;
	UserAgent user_agent = 10;
	Uuid client_id = 11;
	Uuid account_id = 12;
}

message SubscriptionCancelled {
	Uuid id = 1;
	Uuid subscription_id = 2;
	Uuid user_id = 3;
	Timestamp created_at = 4;
}

enum SubscriptionStatus{
	TRIALING = 0;
	ACTIVE = 1;
	PAST_DUE = 2;
	CANCELED = 3;
	EXPIRED = 4;
}

message SubscriptionCreated {
	message Subscription {
		Uuid id = 1;
		SubscriptionStatus status = 2;
		Timestamp created_at = 3;
		Uuid plan_id = 4;
		string plan_name = 5;
		string gateway_customer_id = 6;
		PaymentTerms payment_terms = 7;
		PaymentSchedule payment_schedule = 8;
		float term_value = 9;
		Timestamp initial_period_start = 10;
		Timestamp initial_period_end = 11;
	}
	message Payment {
		Uuid id = 1;
		PaymentType type = 2;
		float amount = 3;
		string currency = 4;
	}
	Uuid id = 1;
	Uuid user_id = 2;
	Timestamp created_at = 3;
	Subscription subscription = 4;
	Payment payment = 5;
}

message SubscriptionPeriodUpdated {
	message Subscription {
		Uuid id = 1;
		SubscriptionStatus status = 2;
		Timestamp new_period_start = 3;
		Timestamp new_period_end = 4;
	}
	message Payment {
		Uuid id = 1;
		PaymentType type = 2;
		float amount = 3;
		string currency = 4;
	}
	Uuid id = 1;
	Uuid user_id = 2;
	Timestamp created_at = 3;
	Subscription subscription = 4;
	Payment payment = 5;
}

message Visit {
	message UserAgent {
		string browser = 1;
		string version = 2;
	}
	message Utm {
		string source = 1;
		string medium = 2;
		string campaign = 3;
		string content = 4;
		string term = 5;
	}
	message Experiment {
		string id = 1;
		string name = 2;
		bool enabled = 3;
	}
	Uuid id = 1;
	Uuid visitor_id = 2;
	Uuid user_id = 3;
	Timestamp created_at = 4;
	string uri = 5;
	string ip = 6;
	Utm utm = 7;
	UserAgent user_agent = 8;
	string referrer = 9;
	string domain = 10;
	repeated Experiment experiments = 11;
	string source = 12;
	Product product = 13;
	string cta = 14;
}

message Response {
	string message = 1;
}

service EventsCollector {
	rpc CollectFunnel (Funnel) returns (Response){}
	rpc CollectFunnelEvent (FunnelEvent) returns (Response){}
	rpc CollectVisit (Visit) returns (Response){}
	rpc CollectSignup (Signup) returns (Response){}
	rpc CollectSignin (Signin) returns (Response){}
	rpc CollectActionTaken (ActionTaken) returns (Response){}
	rpc CollectSubscriptionCreated (SubscriptionCreated) returns (Response){}
	rpc CollectSubscriptionPeriodUpdated (SubscriptionPeriodUpdated) returns (Response){}
	rpc CollectSubscriptionCancelled (SubscriptionCancelled) returns (Response){}
}